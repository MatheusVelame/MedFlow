<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="br.com.medflow.dominio.financeiro.faturamentos.RunCucumberTest" time="0.145" tests="16" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="25"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/test-classes:/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/classes:/Users/paulorago/.m2/repository/commons-validator/commons-validator/1.9.0/commons-validator-1.9.0.jar:/Users/paulorago/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/paulorago/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/paulorago/.m2/repository/commons-logging/commons-logging/1.3.2/commons-logging-1.3.2.jar:/Users/paulorago/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-java/7.21.1/cucumber-java-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-core/7.21.1/cucumber-core-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-gherkin/7.21.1/cucumber-gherkin-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.21.1/cucumber-gherkin-messages-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/gherkin/31.0.0/gherkin-31.0.0.jar:/Users/paulorago/.m2/repository/io/cucumber/messages/27.2.0/messages-27.2.0.jar:/Users/paulorago/.m2/repository/io/cucumber/testng-xml-formatter/0.3.1/testng-xml-formatter-0.3.1.jar:/Users/paulorago/.m2/repository/io/cucumber/query/13.2.0/query-13.2.0.jar:/Users/paulorago/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/Users/paulorago/.m2/repository/io/cucumber/datatable/7.21.1/datatable-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-plugin/7.21.1/cucumber-plugin-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/docstring/7.21.1/docstring-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/html-formatter/21.9.0/html-formatter-21.9.0.jar:/Users/paulorago/.m2/repository/io/cucumber/junit-xml-formatter/0.7.1/junit-xml-formatter-0.7.1.jar:/Users/paulorago/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/paulorago/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.21.1/cucumber-junit-platform-engine-7.21.1.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/Users/paulorago/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite/1.11.4/junit-platform-suite-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-api/1.11.4/junit-platform-suite-api-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.11.4/junit-platform-suite-engine-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.11.4/junit-platform-suite-commons-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-launcher/1.11.4/junit-platform-launcher-1.11.4.jar:/Users/paulorago/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Recife"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="25"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/25/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/surefire/surefirebooter-20251019180730869_3.jar /Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/surefire 2025-10-19T18-07-30_828-jvmRun1 surefire-20251019180730869_1tmp surefire_0-20251019180730869_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/test-classes:/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/classes:/Users/paulorago/.m2/repository/commons-validator/commons-validator/1.9.0/commons-validator-1.9.0.jar:/Users/paulorago/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/Users/paulorago/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/Users/paulorago/.m2/repository/commons-logging/commons-logging/1.3.2/commons-logging-1.3.2.jar:/Users/paulorago/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-java/7.21.1/cucumber-java-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-core/7.21.1/cucumber-core-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-gherkin/7.21.1/cucumber-gherkin-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.21.1/cucumber-gherkin-messages-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/gherkin/31.0.0/gherkin-31.0.0.jar:/Users/paulorago/.m2/repository/io/cucumber/messages/27.2.0/messages-27.2.0.jar:/Users/paulorago/.m2/repository/io/cucumber/testng-xml-formatter/0.3.1/testng-xml-formatter-0.3.1.jar:/Users/paulorago/.m2/repository/io/cucumber/query/13.2.0/query-13.2.0.jar:/Users/paulorago/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/Users/paulorago/.m2/repository/io/cucumber/datatable/7.21.1/datatable-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-plugin/7.21.1/cucumber-plugin-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/docstring/7.21.1/docstring-7.21.1.jar:/Users/paulorago/.m2/repository/io/cucumber/html-formatter/21.9.0/html-formatter-21.9.0.jar:/Users/paulorago/.m2/repository/io/cucumber/junit-xml-formatter/0.7.1/junit-xml-formatter-0.7.1.jar:/Users/paulorago/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/Users/paulorago/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/paulorago/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.21.1/cucumber-junit-platform-engine-7.21.1.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/Users/paulorago/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite/1.11.4/junit-platform-suite-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-api/1.11.4/junit-platform-suite-api-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.11.4/junit-platform-suite-engine-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.11.4/junit-platform-suite-commons-1.11.4.jar:/Users/paulorago/.m2/repository/org/junit/platform/junit-platform-launcher/1.11.4/junit-platform-launcher-1.11.4.jar:/Users/paulorago/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/paulorago"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-09-16"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/25/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro/target/surefire/surefirebooter-20251019180730869_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="25"/>
    <property name="user.name" value="paulorago"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.6.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/paulorago/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/n0/dc5hw0cd1hvb90bgm7t0j4180000gn/T/"/>
    <property name="java.version" value="25"/>
    <property name="user.dir" value="/Users/paulorago/Repositories /MedFlow/dominio-financeiro"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/paulorago/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="25"/>
    <property name="stdin.encoding" value="UTF-8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="69.0"/>
  </properties>
  <testcase name="Alterar status de um faturamento existente para Cancelado (sucesso)" classname="Alteração de status de cobranças registradas" time="0.033">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(AlterarStatus)
Scenario: Alterar status de um faturamento existente para Cancelado (sucesso)                                                                                                  &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/alteracao_status_de_cobrancas.feature:8&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3101"&amp#27;[0m&amp#27;[32m e status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.existe_um_faturamento_com_id_e_status_atual(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m                                                                                                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo novo status solicitado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cancelado"&amp#27;[0m&amp#27;[32m com motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Erro de lançamento"&amp#27;[0m                                                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_novo_status_solicitado_é_com_motivo(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Iniciando alteração de status para ID=FAT-3101, Status=Cancelado, Usuario=Ana Lima
DEBUG: Verificando permissões - Usuario=Ana Lima, Papel=Administrador Financeiro, TemPermissao=true
DEBUG: alteracaoPermitida - Verificando permissão: true
DEBUG: Status antes=Pendente, Status novo=Cancelado
DEBUG: Status após salvar=Cancelado
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária alterar o status do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3101"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:15"&amp#27;[0m                                                                                              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.a_usuária_alterar_o_status_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Status esperado=Cancelado, Status atual=Cancelado
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve atualizar o status para &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cancelado"&amp#27;[0m                                                                                                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_sistema_deve_atualizar_o_status_para(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar no log: ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3101"&amp#27;[0m&amp#27;[32m, status anterior &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m, novo status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cancelado"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:15"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Erro de lançamento"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_registrar_no_log_id_status_anterior_novo_status_usuário_data_hora_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve disparar a notificação interna de ajuste contábil&amp#27;[0m                                                                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_disparar_a_notificação_interna_de_ajuste_contábil()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Impedir alteração quando o faturamento não existe (falha)" classname="Alteração de status de cobranças registradas" time="0.007">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(AlterarStatus)
Scenario: Impedir alteração quando o faturamento não existe (falha)                                                                                           &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/alteracao_status_de_cobrancas.feature:18&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mnão existe faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-9999"&amp#27;[0m                                                                                                              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.não_existe_faturamento_com_id(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m                                                                                            &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo novo status solicitado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cancelado"&amp#27;[0m&amp#27;[32m com motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"ID incorreto"&amp#27;[0m                                                                                        &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_novo_status_solicitado_é_com_motivo(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Iniciando alteração de status para ID=FAT-9999, Status=Cancelado, Usuario=Ana Lima
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária tentar alterar o status do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-9999"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:20"&amp#27;[0m                                                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.a_usuária_tentar_alterar_o_status_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve rejeitar a operação informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"faturamento não encontrado"&amp#27;[0m                                                                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_sistema_deve_rejeitar_a_operação_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mnenhum status deve ser alterado&amp#27;[0m                                                                                                                         &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.nenhum_status_deve_ser_alterado()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar log de tentativa negada com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-9999"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:20"&amp#27;[0m&amp#27;[32m, ação &amp#27;[0m&amp#27;[32m&amp#27;[1m"AlterarStatus"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"ID incorreto"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_registrar_log_de_tentativa_negada_com_id_usuário_data_hora_ação_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Alterar status por usuário com permissão administrativa (sucesso)" classname="Alteração de status de cobranças registradas" time="0.004">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(AlterarStatus)
Scenario: Alterar status por usuário com permissão administrativa (sucesso)                                                                                                                &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/alteracao_status_de_cobrancas.feature:28&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3199"&amp#27;[0m&amp#27;[32m e status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                                  &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.existe_um_faturamento_com_id_e_status_atual(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador do Sistema"&amp#27;[0m                                                                                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo novo status solicitado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m&amp#27;[32m com motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Compensação bancária confirmada"&amp#27;[0m                                                                                                       &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_novo_status_solicitado_é_com_motivo(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Iniciando alteração de status para ID=FAT-3199, Status=Pago, Usuario=Carlos Souza
DEBUG: Verificando permissões - Usuario=Carlos Souza, Papel=Administrador do Sistema, TemPermissao=true
DEBUG: alteracaoPermitida - Verificando permissão: true
DEBUG: Status antes=Pendente, Status novo=Pago
DEBUG: Status após salvar=Pago
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mo usuário alterar o status do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3199"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:25"&amp#27;[0m                                                                                                          &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_usuário_alterar_o_status_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Status esperado=Pago, Status atual=Pago
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve atualizar o status para &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m                                                                                                                                       &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_sistema_deve_atualizar_o_status_para(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar no log: ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3199"&amp#27;[0m&amp#27;[32m, status anterior &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m, novo status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:25"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Compensação bancária confirmada"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_registrar_no_log_id_status_anterior_novo_status_usuário_data_hora_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve disparar notificação interna de contabilização&amp#27;[0m                                                                                                                                  &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_disparar_notificação_interna_de_contabilização()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Bloquear alteração por usuário sem permissão administrativa (falha)" classname="Alteração de status de cobranças registradas" time="0.005">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(AlterarStatus)
Scenario: Bloquear alteração por usuário sem permissão administrativa (falha)                                                                                               &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/alteracao_status_de_cobrancas.feature:38&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3200"&amp#27;[0m&amp#27;[32m e status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.existe_um_faturamento_com_id_e_status_atual(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Beatriz Melo"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Atendente"&amp#27;[0m                                                                                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo novo status solicitado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m                                                                                                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_novo_status_solicitado_é(java.lang.String)&amp#27;[0m
DEBUG: Iniciando alteração de status para ID=FAT-3200, Status=Pago, Usuario=Beatriz Melo
DEBUG: Verificando permissões - Usuario=Beatriz Melo, Papel=Atendente, TemPermissao=false
DEBUG: alteracaoPermitida - Verificando permissão: false
DEBUG: Lançando exceção - permissão administrativa necessária
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária tentar alterar o status do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3200"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:30"&amp#27;[0m                                                                                    &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.a_usuária_tentar_alterar_o_status_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve negar a operação informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"permissão administrativa necessária"&amp#27;[0m                                                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_sistema_deve_negar_a_operação_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo status deve permanecer &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_status_deve_permanecer(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar log de tentativa negada com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3200"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Beatriz Melo"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:30"&amp#27;[0m&amp#27;[32m, ação &amp#27;[0m&amp#27;[32m&amp#27;[1m"AlterarStatus"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Permissão insuficiente"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_registrar_log_de_tentativa_negada_com_id_usuário_data_hora_ação_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Reverter status Pago com permissão especial (sucesso)" classname="Alteração de status de cobranças registradas" time="0.007">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(AlterarStatus)
Scenario: Reverter status Pago com permissão especial (sucesso)                                                                                                                  &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/alteracao_status_de_cobrancas.feature:48&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3220"&amp#27;[0m&amp#27;[32m e status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m                                                                                                            &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.existe_um_faturamento_com_id_e_status_atual(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mariana Reis"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m&amp#27;[32m e possui &amp#27;[0m&amp#27;[32m&amp#27;[1m"PermissãoEspecialReversao"&amp#27;[0m                                                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_usuário_possui_papel_e_possui(java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo novo status solicitado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m com motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Chargeback confirmado"&amp#27;[0m                                                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_novo_status_solicitado_é_com_motivo(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Iniciando alteração de status para ID=FAT-3220, Status=Pendente, Usuario=Mariana Reis
DEBUG: Verificando permissões - Usuario=Mariana Reis, Papel=Administrador Financeiro, TemPermissao=true
DEBUG: alteracaoPermitida - Verificando permissão: true
DEBUG: Status antes=Pago, Status novo=Pendente
DEBUG: Status após salvar=Pendente
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária alterar o status do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3220"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:40"&amp#27;[0m                                                                                                &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.a_usuária_alterar_o_status_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
DEBUG: Status esperado=Pendente, Status atual=Pendente
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve atualizar o status para &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                                         &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.o_sistema_deve_atualizar_o_status_para(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar no log: ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3220"&amp#27;[0m&amp#27;[32m, status anterior &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m&amp#27;[32m, novo status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mariana Reis"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:40"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Chargeback confirmado"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_registrar_no_log_id_status_anterior_novo_status_usuário_data_hora_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve disparar notificação interna de ajuste contábil&amp#27;[0m                                                                                                                       &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.AlteracaoStatusFuncionalidade.deve_disparar_notificação_interna_de_ajuste_contábil()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Administrador exclui logicamente um faturamento pendente" classname="Exclusão lógica de faturamentos inválidos" time="0.006">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(ExcluirFaturamento)
Scenario: Administrador exclui logicamente um faturamento pendente                                                                                                                &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/exclusao_logica_de_faturamentos.feature:4&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-1023"&amp#27;[0m&amp#27;[32m e status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                                                                                               &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.existe_um_faturamento_com_id_e_status(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m                                                                                                                &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo motivo informado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Duplicidade de lançamento"&amp#27;[0m                                                                                                                            &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_motivo_informado_é(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária solicitar a exclusão do faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-1023"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:32"&amp#27;[0m                                                                                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.a_usuária_solicitar_a_exclusão_do_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve marcar o faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-1023"&amp#27;[0m&amp#27;[32m como &amp#27;[0m&amp#27;[32m&amp#27;[1m"removido"&amp#27;[0m&amp#27;[32m (exclusão lógica)&amp#27;[0m                                                                                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_sistema_deve_marcar_o_faturamento_como_exclusão_lógica(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar no log: ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-1023"&amp#27;[0m&amp#27;[32m, status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 10:32"&amp#27;[0m&amp#27;[32m, ação &amp#27;[0m&amp#27;[32m&amp#27;[1m"Exclusão Lógica"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Duplicidade de lançamento"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.deve_registrar_no_log_id_status_atual_usuário_data_hora_ação_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo registro não deve aparecer nas listagens operacionais padrão&amp#27;[0m                                                                                                              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_registro_não_deve_aparecer_nas_listagens_operacionais_padrão()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Usuário sem permissão tenta excluir faturamento" classname="Exclusão lógica de faturamentos inválidos" time="0.005">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(ExcluirFaturamento)
Scenario: Usuário sem permissão tenta excluir faturamento                                                        &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/exclusao_logica_de_faturamentos.feature:14&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3001"&amp#27;[0m&amp#27;[32m e status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m                                              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.existe_um_faturamento_com_id_e_status(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Beatriz Melo"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Atendente"&amp#27;[0m&amp#27;[32m (sem permissão administrativa)&amp#27;[0m                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel_sem_permissão_administrativa(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo motivo informado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Erro de digitação"&amp#27;[0m                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_motivo_informado_é(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária tentar excluir o faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-3001"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 09:47"&amp#27;[0m                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.a_usuária_tentar_excluir_o_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve negar a operação informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"Apenas administradores podem excluir faturamentos"&amp#27;[0m            &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_sistema_deve_negar_a_operação_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo faturamento deve permanecer inalterado&amp#27;[0m                                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_faturamento_deve_permanecer_inalterado()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve ser registrado log de segurança da tentativa negada com ID, usuário, data/hora, ação tentada e motivo&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.deve_ser_registrado_log_de_segurança_da_tentativa_negada_com_id_usuário_data_hora_ação_tentada_e_motivo()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Administrador exclui logicamente um faturamento marcado como Inválido" classname="Exclusão lógica de faturamentos inválidos" time="0.004">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(ExcluirFaturamento)
Scenario: Administrador exclui logicamente um faturamento marcado como Inválido                                                                                                        &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/exclusao_logica_de_faturamentos.feature:24&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-2045"&amp#27;[0m&amp#27;[32m e status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Inválido"&amp#27;[0m                                                                                                                    &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.existe_um_faturamento_com_id_e_status(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m                                                                                                                 &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo motivo informado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Erro de identificação do paciente"&amp#27;[0m                                                                                                                         &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_motivo_informado_é(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mo usuário excluir o faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-2045"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 11:05"&amp#27;[0m                                                                                                                &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_excluir_o_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve marcar o faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-2045"&amp#27;[0m&amp#27;[32m como &amp#27;[0m&amp#27;[32m&amp#27;[1m"removido"&amp#27;[0m&amp#27;[32m (exclusão lógica)&amp#27;[0m                                                                                                &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_sistema_deve_marcar_o_faturamento_como_exclusão_lógica(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve registrar no log os campos: ID, status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Inválido"&amp#27;[0m&amp#27;[32m, usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m, data/hora &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 11:05"&amp#27;[0m&amp#27;[32m, ação &amp#27;[0m&amp#27;[32m&amp#27;[1m"Exclusão Lógica"&amp#27;[0m&amp#27;[32m, motivo &amp#27;[0m&amp#27;[32m&amp#27;[1m"Erro de identificação do paciente"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.deve_registrar_no_log_os_campos_id_status_usuário_data_hora_ação_motivo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Bloqueio de exclusão para faturamento com status não permitido" classname="Exclusão lógica de faturamentos inválidos" time="0.003">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(ExcluirFaturamento)
Scenario: Bloqueio de exclusão para faturamento com status não permitido                                                 &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/exclusao_logica_de_faturamentos.feature:33&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste um faturamento com ID &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-4500"&amp#27;[0m&amp#27;[32m e status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m                                                          &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.existe_um_faturamento_com_id_e_status(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m possui papel &amp#27;[0m&amp#27;[32m&amp#27;[1m"Administrador Financeiro"&amp#27;[0m                                                       &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_usuário_possui_papel(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo motivo informado é &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ajuste operacional"&amp#27;[0m                                                                          &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_motivo_informado_é(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária tentar excluir o faturamento &amp#27;[0m&amp#27;[32m&amp#27;[1m"FAT-4500"&amp#27;[0m&amp#27;[32m em &amp#27;[0m&amp#27;[32m&amp#27;[1m"21/09/2025 08:20"&amp#27;[0m                                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.a_usuária_tentar_excluir_o_faturamento_em(java.lang.String,java.lang.String)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve impedir a exclusão informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"Apenas Pendente ou Inválido podem ser excluídos"&amp#27;[0m                    &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_sistema_deve_impedir_a_exclusão_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo faturamento deve permanecer inalterado&amp#27;[0m                                                                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.o_faturamento_deve_permanecer_inalterado()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mdeve ser registrado log de tentativa negada com ID, status atual &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m&amp#27;[32m, usuário, data/hora, ação tentada e motivo&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.ExclusaoFaturamentoFuncionalidade.deve_ser_registrado_log_de_tentativa_negada_com_id_status_atual_usuário_data_hora_ação_tentada_e_motivo(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Registrar faturamento com todos os campos obrigatórios" classname="Registro de faturamentos de consultas e exames" time="0.008">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Registrar faturamento com todos os campos obrigatórios                 &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:10&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-001"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mexiste na tabela o procedimento &amp#27;[0m&amp#27;[32m&amp#27;[1m"Consulta Clínica"&amp#27;[0m                         &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_na_tabela_o_procedimento(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
DEBUG: Faturamento criado com sucesso: SIM
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária registrar um faturamento com:&amp#27;[0m                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_usuária_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-001          |
    | procedimento | Consulta Clínica |
    | valor        | 200.00           |
    | metodo       | Cartão           |
    | dataHora     | 21/09/2025 10:05 |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve criar o faturamento com status inicial &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m          &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_criar_o_faturamento_com_status_inicial(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo registro deve conter paciente, procedimento, valor e método de pagamento&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_registro_deve_conter_paciente_procedimento_valor_e_método_de_pagamento()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Impedir registro quando faltar método de pagamento" classname="Registro de faturamentos de consultas e exames" time="0.004">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Impedir registro quando faltar método de pagamento                                 &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:24&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-002"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                               &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mexiste na tabela o procedimento &amp#27;[0m&amp#27;[32m&amp#27;[1m"Exame Hemograma"&amp#27;[0m                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_na_tabela_o_procedimento(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mo usuário tentar registrar um faturamento com:&amp#27;[0m                                        &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_tentar_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-002          |
    | procedimento | Exame Hemograma  |
    | valor        | 45.00            |
    | metodo       | [empty]          |
    | dataHora     | 21/09/2025 10:15 |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve rejeitar o registro informando que &amp#27;[0m&amp#27;[32m&amp#27;[1m"método de pagamento é obrigatório"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_rejeitar_o_registro_informando_que(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mnenhum faturamento deve ser criado&amp#27;[0m                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.nenhum_faturamento_deve_ser_criado()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Registrar faturamento com valor compatível à tabela" classname="Registro de faturamentos de consultas e exames" time="0.004">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Registrar faturamento com valor compatível à tabela              &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:38&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-003"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma tabela de preços define &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ultrassom Abdominal"&amp#27;[0m&amp#27;[32m = &amp#27;[0m&amp#27;[32m&amp#27;[1m180.00&amp#27;[0m             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_tabela_de_preços_define(java.lang.String,java.lang.Double)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mariana Reis"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
DEBUG: Faturamento criado com sucesso: SIM
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária registrar um faturamento com:&amp#27;[0m                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_usuária_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-003             |
    | procedimento | Ultrassom Abdominal |
    | valor        | 180.00              |
    | metodo       | Cartão              |
    | dataHora     | 21/09/2025 10:30    |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve aceitar o registro&amp#27;[0m                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_aceitar_o_registro()&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma validação automática de valor deve indicar &amp#27;[0m&amp#27;[32m&amp#27;[1m"compatível com tabela"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_validação_automática_de_valor_deve_indicar(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Bloquear registro com valor não positivo ou divergente sem justificativa" classname="Registro de faturamentos de consultas e exames" time="0.003">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Bloquear registro com valor não positivo ou divergente sem justificativa &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:52&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-004"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma tabela de preços define &amp#27;[0m&amp#27;[32m&amp#27;[1m"Raio-X Tórax"&amp#27;[0m&amp#27;[32m = &amp#27;[0m&amp#27;[32m&amp#27;[1m95.00&amp#27;[0m                             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_tabela_de_preços_define(java.lang.String,java.lang.Double)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m             &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária tentar registrar um faturamento com:&amp#27;[0m                              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_usuária_tentar_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-004          |
    | procedimento | Raio-X Tórax     |
    | valor        | 0.00             |
    | metodo       | Dinheiro         |
    | dataHora     | 21/09/2025 10:40 |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve rejeitar o registro informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"valor deve ser positivo"&amp#27;[0m     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_rejeitar_o_registro_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mnenhum faturamento deve ser criado&amp#27;[0m                                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.nenhum_faturamento_deve_ser_criado()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Bloquear registro quando valor divergir da tabela sem justificativa" classname="Registro de faturamentos de consultas e exames" time="0.003">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Bloquear registro quando valor divergir da tabela sem justificativa                                   &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:66&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32ma tabela de preços define &amp#27;[0m&amp#27;[32m&amp#27;[1m"Consulta Clínica"&amp#27;[0m&amp#27;[32m = &amp#27;[0m&amp#27;[32m&amp#27;[1m200.00&amp#27;[0m                                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_tabela_de_preços_define(java.lang.String,java.lang.Double)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-005"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                                                    &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Carlos Souza"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mo usuário tentar registrar um faturamento com:&amp#27;[0m                                                           &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_tentar_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente      | PAC-005          |
    | procedimento  | Consulta Clínica |
    | valor         | 160.00           |
    | metodo        | Cartão           |
    | dataHora      | 21/09/2025 10:50 |
    | justificativa | [empty]          |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve rejeitar o registro informando &amp#27;[0m&amp#27;[32m&amp#27;[1m"justificativa obrigatória para valor diferente da tabela"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_rejeitar_o_registro_informando(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mnenhum faturamento deve ser criado&amp#27;[0m                                                                        &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.nenhum_faturamento_deve_ser_criado()&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Forçar status inicial Pendente no ato do registro" classname="Registro de faturamentos de consultas e exames" time="0.003">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Forçar status inicial Pendente no ato do registro                                                  &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:81&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-006"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                                               &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma tabela de preços define &amp#27;[0m&amp#27;[32m&amp#27;[1m"Exame Glicemia"&amp#27;[0m&amp#27;[32m = &amp#27;[0m&amp#27;[32m&amp#27;[1m30.00&amp#27;[0m                                                     &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_tabela_de_preços_define(java.lang.String,java.lang.Double)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mariana Reis"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m                                   &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
DEBUG: Faturamento criado com sucesso: SIM
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária registrar um faturamento com:&amp#27;[0m                                                               &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_usuária_registrar_um_faturamento_com(io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-006          |
    | procedimento | Exame Glicemia   |
    | valor        | 30.00            |
    | metodo       | Convênio         |
    | dataHora     | 21/09/2025 11:00 |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve criar o faturamento com status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m&amp#27;[32m (independente de qualquer entrada de status)&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_criar_o_faturamento_com_status_independente_de_qualquer_entrada_de_status(java.lang.String)&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Ignorar status enviado pelo cliente e manter &quot;Pendente&quot;" classname="Registro de faturamentos de consultas e exames" time="0.005">
    <system-out><![CDATA[
@boundedcontext(Financeiro) @aggregate(Faturamento) @command(RegistrarFaturamento)
Scenario: Ignorar status enviado pelo cliente e manter "Pendente"                   &amp#27;[90m# br/com/medflow/dominio/financeiro/faturamentos/gerenciamento_de_faturamentos.feature:94&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mexiste o paciente &amp#27;[0m&amp#27;[32m&amp#27;[1m"PAC-007"&amp#27;[0m&amp#27;[32m cadastrado&amp#27;[0m                                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.existe_o_paciente_cadastrado(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32ma tabela de preços define &amp#27;[0m&amp#27;[32m&amp#27;[1m"Consulta Clínica"&amp#27;[0m&amp#27;[32m = &amp#27;[0m&amp#27;[32m&amp#27;[1m200.00&amp#27;[0m                         &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_tabela_de_preços_define(java.lang.String,java.lang.Double)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mo usuário &amp#27;[0m&amp#27;[32m&amp#27;[1m"Ana Lima"&amp#27;[0m&amp#27;[32m (Administrador Financeiro) está autenticado&amp#27;[0m              &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_usuário_administrador_financeiro_está_autenticado(java.lang.String)&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32ma usuária enviar um registro com campo de status &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pago"&amp#27;[0m                      &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.a_usuária_enviar_um_registro_com_campo_de_status(java.lang.String,io.cucumber.datatable.DataTable)&amp#27;[0m
    | paciente     | PAC-007          |
    | procedimento | Consulta Clínica |
    | valor        | 200.00           |
    | metodo       | Cartão           |
    | dataHora     | 21/09/2025 11:10 |
    | status       | Pago             |
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mo sistema deve ignorar o valor recebido para status e salvar como &amp#27;[0m&amp#27;[32m&amp#27;[1m"Pendente"&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.o_sistema_deve_ignorar_o_valor_recebido_para_status_e_salvar_como(java.lang.String)&amp#27;[0m
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mregistrar em log que o status informado foi sobrescrito pela regra de negócio&amp#27;[0m &amp#27;[90m# br.com.medflow.dominio.financeiro.faturamentos.FaturamentoFuncionalidade.registrar_em_log_que_o_status_informado_foi_sobrescrito_pela_regra_de_negócio()&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>